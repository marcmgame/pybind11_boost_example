name: Build wheels

on:
  push:
    branches:
      - main
    tags:
      - v* # Push events to v* tags
  # pull_request:
  #   branches:
  #     - master
  # Manual run
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  # Build wheels for Linux, macOS, and Windows
  build_wheels:
    name: Wheel for ${{ matrix.buildplat[0] }}-${{ matrix.python }}_${{ matrix.buildplat[1] }}_${{ matrix.buildplat[2] }}
    runs-on: ${{ matrix.buildplat[0] }}

    strategy:
      # Build the other wheels even if one fails
      fail-fast: false
      matrix:
        buildplat:
        - [ubuntu-latest, manylinux, x86_64]
        # - [ubuntu-latest, manylinux, aarch64]
        # - [ubuntu-latest, manylinux, i686]
        - [ubuntu-latest, musllinux, x86_64]
        # - [ubuntu-latest, musllinux, aarch64]
        # - [ubuntu-latest, musllinux, i686]
        - [macos-latest, macosx, x86_64]
        # - [macos-latest, macosx, arm64]
        - [windows-latest, win, AMD64]
        # - [windows-latest, win, ARM64]
        # - [windows-latest, win32, x86]
        python: ['cp310']
        # python: ['cp310', 'pp39']
        # python: ['cp38', 'cp39', 'cp310', 'cp311', 'cp312', 'pp39']
        # python: ['cp38', 'cp39', 'cp310', 'cp311', 'cp312']
        # python: [38, 39, 310, 311, 312]
        boost_version: ['1.80.0']
        # exclude:
        #   - buildplat: [windows-latest, win, ARM64]
        #     python: 'pp39'
        #   - buildplat: [windows-latest, win32, x86]
        #     python: 'pp39'

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Install boost
        uses: MarkusJx/install-boost@v2.1.0
        id: install-boost
        with:
          boost_version: ${{ matrix.boost_version }}
          arch: ${{ matrix.buildplat[2] }}
          toolset: 'msvc'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}*
          CIBW_ARCHS: ${{ matrix.buildplat[2] }}
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
          Boost_INCLUDE_DIR: ${{ steps.install-boost.outputs.BOOST_ROOT }}/include
          Boost_LIBRARY_DIRS: ${{ steps.install-boost.outputs.BOOST_ROOT }}/lib
          CIBW_BEFORE_BUILD_LINUX: echo $BOOST_ROOT
          CIBW_ENVIRONMENT: BOOST_ROOT='${{ steps.install-boost.outputs.BOOST_ROOT }}'
          CIBW_ENVIRONMENT_WINDOWS: BOOST_ROOT='${{ steps.install-boost.outputs.BOOST_ROOT }}'
          CIBW_ENVIRONMENT_MACOS: BOOST_ROOT='${{ steps.install-boost.outputs.BOOST_ROOT }}'
          CIBW_ENVIRONMENT_LINUX: BOOST_ROOT=/boost
          CIBW_ENVIRONMENT_PASS_LINUX: BOOST_ROOT

      - name: Show files
        run: ls -lh wheelhouse
        shell: bash

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl
